#BOJ_2775_bronze1-부녀회장이될테야
'''
부녀회장 되기 위해 반상회 주최

* 거주조건 *

a층의 b호에 살려면 자신의 아래(a-1)층의 1호 ~ b호 사람들의 수의 합 만큼 사람들을 데려와 살아야함
모두 계약 조건을 지키고 있음
앙의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있는지 출력
0층부터 있고, 1호부터 있음
0층의 i호에는 i명이 삼

ex) 3층에 b호에 살고 싶음 => 2층의 1호 ~ b호 사람 수 만큼 데려와야 함 ( 가우스 공식 )

N = 2
0층 ??명
1층 3호에 살고 싶으면 0층의 1호 ~ 3호의 사람 수 만큼 필요 => 1 + 2 + 3 = 6
2층 3호에 살고 싶으면 1층의 1호 ~ 3호의 사람 수 만큼 필요 => 1층 1호 = 1 1층 2호 = 3 1층 3호 = 6 => 10
3층 3호에 살고 싶으면 2층의 1호 ~ 3호의 사람 수 만큼 필요 => 2층 1호 = 1 2층 2호 = 6 2층 3호 = 10 => 17

N층 b호에 살고 싶으면 (N-1)층의 1호 ~ b호의 사람 수 만큼 필요

(N-1)층의 1호 = (N-2)층의 1호 = ... = 0층의 1호 = 1
(N-1)층의 2호 = (N-2)층의 1호 + (N-2)층의 2호

=> list에 담아서 순서대로?


def f(lst, ho):                 # 이 전층의 인원들이 담긴 리스트를 받아서
    lst2 = []                   # 다음층의 인원들이 담긴 리스트를 출력
    for i in range(1, ho+1):
        sol = 0
        for j in range(i):
            sol += lst[j]
        lst2.append(sol)
    return lst2

for _ in range(int(input())):
    floor = int(input())
    ho = int(input())
    lst = []
    for i in range(1, ho+1):    # 0층의 인원만 미리 선정
        lst.append(i)

    while floor > 0:
        lst = f(lst, ho)
        floor -= 1
    print(lst[ho-1])            #해당 층의 호수 뽑기

